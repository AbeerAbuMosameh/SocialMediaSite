<?php

namespace App\Exceptions;

use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Illuminate\Validation\ValidationException;
use Throwable;

class Handler extends ExceptionHandler
{
    /**
     * A list of the exception types that are not reported.
     *
     * @var array<int, class-string<Throwable>>
     */
    protected $dontReport = [
        //
    ];

    /**
     * A list of the inputs that are never flashed for validation exceptions.
     *
     * @var array<int, string>
     */
    protected $dontFlash = [
        'current_password',
        'password',
        'password_confirmation',
    ];

    /**
     * Register the exception handling callbacks for the application.
     *
     * @return void
     */
    public function register()
    {
        $this->reportable(function (Throwable $e) {
            //
        });
    }

    public function render($request, Throwable $e)
    {

        if ($e instanceof ValidationException){
            $errors = [];

            $index = 0;
            $msg = null;
            foreach ($e->errors() as $key => $error){
                $item['field_name'] = $key;
                $item['message'] = $error[0];
                $errors[] = $item;
                if ($index++ == 0)
                    $msg = $error[0];
            }

            return  apiResponse($errors,$msg,false,400);
        }
        return parent::render($request, $e); // TODO: Change the autogenerated stub
    }
}
